FROM golang:1.23.3-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    git

# Set Go environment variables
ENV GO111MODULE=on
ENV GOSUMDB=off

WORKDIR /app

# Copy go.mod and go.sum first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the code
COPY . .

# Build the binary
RUN CGO_ENABLED=0 GOOS=linux go build -o spotted cmd/operator/main.go

FROM alpine:latest

WORKDIR /app

# Install required tools
RUN apk add --no-cache \
    curl \
    jq \
    netcat-openbsd \
    postgresql-client

# Create necessary directories
RUN mkdir -p /app/config /app/keys/signing && \
    chmod -R 755 /app/config /app/keys

# Copy binary from builder
COPY --from=builder /app/spotted /app/spotted

# Set executable permissions
RUN chmod +x /app/spotted

# Expose ports
EXPOSE 4014 8080 10000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

ENTRYPOINT ["/app/spotted"] 